name: Database Migrations

on:
  push:
    branches: [main]
    paths:
      - "supabase/migrations/**"
  workflow_dispatch: # Allow manual trigger

jobs:
  migrate-production:
    name: Run Production Migrations
    runs-on: ubuntu-latest

    # Only run on main branch
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Check migration status
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          NODE_ENV: production
        run: |
          echo "ðŸ“Š Checking current migration status..."
          npm run db:status

      - name: Run migrations
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          NODE_ENV: production
        run: |
          echo "ðŸš€ Running production migrations..."
          npm run migrate:prod

      - name: Verify migrations
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          NODE_ENV: production
        run: |
          echo "âœ… Verifying migration status..."
          npm run db:status

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Production Migration Failed',
              body: `Migration failed in workflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              labels: ['bug', 'database', 'urgent']
            })

  # Optional: Staging environment migrations
  migrate-staging:
    name: Run Staging Migrations
    runs-on: ubuntu-latest

    # Run on develop branch or before production
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run staging migrations
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_STAGING_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_STAGING_SERVICE_ROLE_KEY }}
          NODE_ENV: staging
        run: |
          echo "ðŸ§ª Running staging migrations..."
          npm run migrate
          npm run db:status

